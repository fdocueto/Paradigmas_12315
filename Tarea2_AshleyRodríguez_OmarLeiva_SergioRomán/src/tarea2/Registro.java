/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package tarea2;

import java.awt.Image;
import java.awt.Toolkit;
import javax.swing.ImageIcon;
import javax.swing.Icon;
import java.sql.*;
import javax.swing.JLabel;
import javax.swing.JOptionPane;

/**
 *
 * @author PON TU NOMBRE
 */
public class Registro extends javax.swing.JFrame {

    /**
     * Creates new form Registro
     */
    // Datos que nos conectaran a la base de datos
    String bd = "bd_vendedores";
    String url = "jdbc:mysql://localhost:3306/" + bd + "?useSSL=false&serverTimezone=UTC";
    String user = "root";
    String password = "";

    public Registro() {
        initComponents();
        setResizable(false);
        setTitle("Registro");
        // centrar la interfaz
        setLocationRelativeTo(null);
        //para que el jScrollPane2(donde saldra el vendedor que vendio mas) no tenga bordes
        jScrollPane2.setOpaque(false);
        jScrollPane2.getViewport().setOpaque(false);
        jScrollPane2.setBorder(null);
        jScrollPane2.setViewportBorder(null);
        jScrollPane2.setViewportView(mayorVendedor);
        this.setLocationRelativeTo(this);
        // ponemos las imagenes de los juegos.
        SetImageLabel(imgFor, "src/imagen/fornite_img.jpg");
        SetImageLabel(imgMin, "src/imagen/minecraft_img.jpg");
        SetImageLabel(imgCod, "src/imagen/cod.jfif");

        // poner fondo
        ImageIcon fondo = new ImageIcon("src/imagen/fondo_img.png");
        Icon icono = new ImageIcon(fondo.getImage().getScaledInstance(jLabelFondo.getWidth(), jLabelFondo.getHeight(), Image.SCALE_DEFAULT));
        jLabelFondo.setIcon(icono);
        
        //para que se noten los cambios
        this.repaint();
    }

    // Ponemos iconos en nuestro JFrame
    @Override
    public Image getIconImage() {
        Image retValue = Toolkit.getDefaultToolkit().getImage(ClassLoader.getSystemResource("imagen/logo.png"));
        return retValue;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabelTitulo = new javax.swing.JLabel();
        jLabelNombre = new javax.swing.JLabel();
        inputNombre = new javax.swing.JTextField();
        inputCodigoVendedor = new javax.swing.JTextField();
        cantVentaCod = new javax.swing.JTextField();
        cantVentaMin = new javax.swing.JTextField();
        cantVentaFor = new javax.swing.JTextField();
        jLabelCodigoVendedor = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabelCantaVentaCod = new javax.swing.JLabel();
        jLabelCantVentaMin = new javax.swing.JLabel();
        jLabelCantVentaFor = new javax.swing.JLabel();
        precioTotalCod = new javax.swing.JLabel();
        precioTotalMin = new javax.swing.JLabel();
        precioTotalFor = new javax.swing.JLabel();
        comisionGanadaCod = new javax.swing.JLabel();
        comisionGanadaMin = new javax.swing.JLabel();
        comisionGanadaFor = new javax.swing.JLabel();
        imgCod = new javax.swing.JLabel();
        imgMin = new javax.swing.JLabel();
        imgFor = new javax.swing.JLabel();
        jLabelPrecioCod = new javax.swing.JLabel();
        jLabelPrecioMin = new javax.swing.JLabel();
        jLabelPrecioFor = new javax.swing.JLabel();
        btn_vendedores = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        mayorVendedor = new javax.swing.JTextArea();
        btn_registrar = new javax.swing.JButton();
        btn_finalizar = new javax.swing.JButton();
        jLabelFondo = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setIconImage(getIconImage());
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabelTitulo.setFont(new java.awt.Font("SansSerif", 1, 36)); // NOI18N
        jLabelTitulo.setForeground(new java.awt.Color(255, 255, 255));
        jLabelTitulo.setText("Registro de ventas y vendedores");
        getContentPane().add(jLabelTitulo, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 20, -1, -1));

        jLabelNombre.setFont(new java.awt.Font("SansSerif", 0, 12)); // NOI18N
        jLabelNombre.setForeground(new java.awt.Color(255, 255, 255));
        jLabelNombre.setText("Nombre :");
        getContentPane().add(jLabelNombre, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 90, -1, -1));

        inputNombre.setBackground(new java.awt.Color(223, 220, 220));
        inputNombre.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        inputNombre.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                inputNombreKeyTyped(evt);
            }
        });
        getContentPane().add(inputNombre, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 90, 260, -1));

        inputCodigoVendedor.setBackground(new java.awt.Color(223, 220, 220));
        inputCodigoVendedor.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        inputCodigoVendedor.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                inputCodigoVendedorKeyTyped(evt);
            }
        });
        getContentPane().add(inputCodigoVendedor, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 130, 260, -1));

        cantVentaCod.setBackground(new java.awt.Color(223, 220, 220));
        cantVentaCod.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        cantVentaCod.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                cantVentaCodKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                cantVentaCodKeyTyped(evt);
            }
        });
        getContentPane().add(cantVentaCod, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 410, 140, -1));

        cantVentaMin.setBackground(new java.awt.Color(223, 220, 220));
        cantVentaMin.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        cantVentaMin.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                cantVentaMinKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                cantVentaMinKeyTyped(evt);
            }
        });
        getContentPane().add(cantVentaMin, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 410, 140, -1));

        cantVentaFor.setBackground(new java.awt.Color(223, 220, 220));
        cantVentaFor.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        cantVentaFor.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                cantVentaForKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                cantVentaForKeyTyped(evt);
            }
        });
        getContentPane().add(cantVentaFor, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 410, 140, -1));

        jLabelCodigoVendedor.setFont(new java.awt.Font("SansSerif", 0, 12)); // NOI18N
        jLabelCodigoVendedor.setForeground(new java.awt.Color(255, 255, 255));
        jLabelCodigoVendedor.setText("Codigo del Vendedor:");
        getContentPane().add(jLabelCodigoVendedor, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 130, -1, -1));

        jLabel1.setFont(new java.awt.Font("SansSerif", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Ventas");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 170, -1, -1));

        jLabelCantaVentaCod.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabelCantaVentaCod.setForeground(new java.awt.Color(255, 255, 255));
        jLabelCantaVentaCod.setText("Venta en Call of Duty :");
        getContentPane().add(jLabelCantaVentaCod, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 390, -1, -1));

        jLabelCantVentaMin.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabelCantVentaMin.setForeground(new java.awt.Color(255, 255, 255));
        jLabelCantVentaMin.setText("Venta en Minecraft :");
        getContentPane().add(jLabelCantVentaMin, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 390, -1, -1));

        jLabelCantVentaFor.setFont(new java.awt.Font("SansSerif", 0, 12)); // NOI18N
        jLabelCantVentaFor.setForeground(new java.awt.Color(255, 255, 255));
        jLabelCantVentaFor.setText("Venta en Fornite :");
        getContentPane().add(jLabelCantVentaFor, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 390, -1, -1));

        precioTotalCod.setFont(new java.awt.Font("SansSerif", 0, 12)); // NOI18N
        precioTotalCod.setForeground(new java.awt.Color(255, 255, 255));
        getContentPane().add(precioTotalCod, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 470, 180, -1));

        precioTotalMin.setFont(new java.awt.Font("SansSerif", 0, 12)); // NOI18N
        precioTotalMin.setForeground(new java.awt.Color(255, 255, 255));
        getContentPane().add(precioTotalMin, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 470, 180, -1));

        precioTotalFor.setFont(new java.awt.Font("SansSerif", 0, 12)); // NOI18N
        precioTotalFor.setForeground(new java.awt.Color(255, 255, 255));
        getContentPane().add(precioTotalFor, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 470, 180, -1));

        comisionGanadaCod.setFont(new java.awt.Font("SansSerif", 0, 12)); // NOI18N
        comisionGanadaCod.setForeground(new java.awt.Color(255, 255, 255));
        getContentPane().add(comisionGanadaCod, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 500, 180, -1));

        comisionGanadaMin.setFont(new java.awt.Font("SansSerif", 0, 12)); // NOI18N
        comisionGanadaMin.setForeground(new java.awt.Color(255, 255, 255));
        getContentPane().add(comisionGanadaMin, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 500, 180, -1));

        comisionGanadaFor.setFont(new java.awt.Font("SansSerif", 0, 12)); // NOI18N
        comisionGanadaFor.setForeground(new java.awt.Color(255, 255, 255));
        getContentPane().add(comisionGanadaFor, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 500, 180, -1));

        imgCod.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        getContentPane().add(imgCod, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 220, 140, 150));

        imgMin.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        getContentPane().add(imgMin, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 220, 140, 150));

        imgFor.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        getContentPane().add(imgFor, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 220, 140, 150));

        jLabelPrecioCod.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        jLabelPrecioCod.setForeground(new java.awt.Color(255, 255, 255));
        jLabelPrecioCod.setText("Precio del producto: 34,500");
        getContentPane().add(jLabelPrecioCod, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 450, -1, -1));

        jLabelPrecioMin.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        jLabelPrecioMin.setForeground(new java.awt.Color(255, 255, 255));
        jLabelPrecioMin.setText("Precio del producto: 8,800");
        getContentPane().add(jLabelPrecioMin, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 450, -1, -1));

        jLabelPrecioFor.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        jLabelPrecioFor.setForeground(new java.awt.Color(255, 255, 255));
        jLabelPrecioFor.setText("Pecio del producto: 58,200");
        getContentPane().add(jLabelPrecioFor, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 450, -1, -1));

        btn_vendedores.setBackground(new java.awt.Color(66, 69, 48));
        btn_vendedores.setForeground(new java.awt.Color(255, 255, 255));
        btn_vendedores.setText("MOSTRAR VENDEDORES");
        btn_vendedores.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_vendedoresActionPerformed(evt);
            }
        });
        getContentPane().add(btn_vendedores, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 530, -1, -1));

        jScrollPane2.setBackground(new java.awt.Color(48, 80, 79));

        mayorVendedor.setEditable(false);
        mayorVendedor.setBackground(new java.awt.Color(224, 145, 50));
        mayorVendedor.setColumns(20);
        mayorVendedor.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        mayorVendedor.setForeground(new java.awt.Color(255, 255, 255));
        mayorVendedor.setRows(5);
        mayorVendedor.setBorder(null);
        jScrollPane2.setViewportView(mayorVendedor);

        getContentPane().add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 570, 570, 100));

        btn_registrar.setBackground(new java.awt.Color(66, 69, 48));
        btn_registrar.setForeground(new java.awt.Color(255, 255, 255));
        btn_registrar.setText("REGISTRAR");
        btn_registrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_registrarActionPerformed(evt);
            }
        });
        getContentPane().add(btn_registrar, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 530, -1, -1));

        btn_finalizar.setBackground(new java.awt.Color(66, 69, 48));
        btn_finalizar.setForeground(new java.awt.Color(255, 255, 255));
        btn_finalizar.setText("FINALIZAR REGISTRO");
        btn_finalizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_finalizarActionPerformed(evt);
            }
        });
        getContentPane().add(btn_finalizar, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 530, -1, -1));

        jLabelFondo.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        getContentPane().add(jLabelFondo, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, -50, 630, 750));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    // Para que no habra la ventana de vendedores
    private void btn_vendedoresActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_vendedoresActionPerformed
        // TODO add your handling code here:
        Vendedores vendedores = new Vendedores();
        vendedores.setVisible(true);
    }//GEN-LAST:event_btn_vendedoresActionPerformed

    private void inputNombreKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_inputNombreKeyTyped
        // TODO add your handling code here:
        // Valido para que solo se ingrese letras
        char letra = evt.getKeyChar();
        // si no es una letra lo cancelamos
        if (!Character.isLetter(letra) && letra != ' ') {
            evt.consume();
        }
    }//GEN-LAST:event_inputNombreKeyTyped

    private void inputCodigoVendedorKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_inputCodigoVendedorKeyTyped
        // TODO add your handling code here:
        // validamos para que solo se ingrese numeros
        char numero = evt.getKeyChar();
        if (!Character.isDigit(numero) && numero != '-' && numero != 'k' && numero != 'K') {
            evt.consume();
        }
    }//GEN-LAST:event_inputCodigoVendedorKeyTyped

    private void cantVentaCodKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cantVentaCodKeyTyped
        // TODO add your handling code here:
        // validamos para que solo se ingrese numeros
        char numero = evt.getKeyChar();
        if (!Character.isDigit(numero)) {
            evt.consume();
        }
    }//GEN-LAST:event_cantVentaCodKeyTyped

    private void cantVentaMinKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cantVentaMinKeyTyped
        // TODO add your handling code here:
        // validamos para que solo se ingrese numeros
        char numero = evt.getKeyChar();
        if (!Character.isDigit(numero)) {
            evt.consume();
        }
    }//GEN-LAST:event_cantVentaMinKeyTyped

    private void cantVentaForKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cantVentaForKeyTyped
        // TODO add your handling code here:
        // validamos que solo se ingrese numeros
        char numero = evt.getKeyChar();
        if (!Character.isDigit(numero)) {
            evt.consume();
        }
    }//GEN-LAST:event_cantVentaForKeyTyped

    private void cantVentaCodKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cantVentaCodKeyReleased
        // TODO add your handling code here:
        String cantCod;
        int comisionCod;

        cantCod = cantVentaCod.getText();

        /* 
           Si lo que hay en el input es un vacio entonces hace lo siguiente -> si esta vacio nos entrega true, pero 
           si nos entrega false quiere decir que esta ingresando un numero, entonces hacemos los calculos
        */
        if ("".equals(cantCod) == false) {
            // El precio por cantidad se calcula en tiempo real cuando escribamos la cantidad de call of duty vendidos
            precioTotalCod.setText("Precio por cantidad: " + String.valueOf(34500 * Integer.parseInt(cantVentaCod.getText())) + "$");
            comisionCod = (int) ((Integer.parseInt(cantCod) * 34500) * 0.06);

            comisionGanadaCod.setText("Comision Ganada: " + Float.toString(comisionCod));
        } else {
            precioTotalCod.setText("");
            comisionGanadaCod.setText("");
        }
    }//GEN-LAST:event_cantVentaCodKeyReleased

    private void cantVentaMinKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cantVentaMinKeyReleased
        // TODO add your handling code here:
        String cantMin;
        int comisionMin;

        cantMin = cantVentaMin.getText();

        /* 
           Si lo que hay en el input es un vacio entonces hace lo siguiente -> si esta vacio nos entrega true, pero 
           si nos entrega false quiere decir que esta ingresando un numero, entonces hacemos los calculos
        */
        if ("".equals(cantMin) == false) {
            // El precio por cantidad se calcula en tiempo real cuando escribamos la cantidad de Minicraft vendidos
            precioTotalMin.setText("Precio por cantidad: " + String.valueOf(8800 * Integer.parseInt(cantVentaMin.getText())) + "$");
            comisionMin = (int) ((Integer.parseInt(cantMin) * 8800) * 0.04);

            comisionGanadaMin.setText("Comision Ganada: " + Float.toString(comisionMin));
        } else {
            precioTotalMin.setText("");
            comisionGanadaMin.setText("");
        }
    }//GEN-LAST:event_cantVentaMinKeyReleased

    private void cantVentaForKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cantVentaForKeyReleased
        // TODO add your handling code here:
        String cantFor;
        int comisionFor;

        cantFor = cantVentaFor.getText();

        /* 
           Si lo que hay en el input es un vacio entonces hace lo siguiente -> si esta vacio nos entrega true, pero 
           si nos entrega false quiere decir que esta ingresando un numero, entonces hacemos los calculos
        */
        if ("".equals(cantFor) == false) {
            // El precio por cantidad se calcula en tiempo real cuando escribamos la cantidad de Fornite vendidos
            if (!cantVentaCod.getText().isEmpty()) {
                precioTotalFor.setText("Precio por cantidad: " + String.valueOf(58200 * Integer.parseInt(cantVentaFor.getText())) + "$");
                comisionFor = (int) ((Integer.parseInt(cantFor) * 58200) * 0.09);

                comisionGanadaFor.setText("Comision Ganada: " + Float.toString(comisionFor));
            }
        } else {
            precioTotalFor.setText("");
            comisionGanadaFor.setText("");
        }
    }//GEN-LAST:event_cantVentaForKeyReleased

    private void btn_registrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_registrarActionPerformed
        // TODO add your handling code here:
        String nombre, codigoVendedor, cantCod, cantMin, cantFor;
        int totalVentas, comisionCod, comisionMin, comisionFor, totalComision;

        //trim() --> para eliminar los espacion que sobran al final
        nombre = inputNombre.getText().trim();
        codigoVendedor = inputCodigoVendedor.getText().trim();
        cantCod = cantVentaCod.getText().trim();
        cantMin = cantVentaMin.getText().trim();
        cantFor = cantVentaFor.getText().trim();

        // Validamos si los input estan con datos
        if (nombre.isEmpty() || codigoVendedor.isEmpty() || cantCod.isEmpty() || cantMin.isEmpty() || cantFor.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Error, Por favor llenar todos los campos");
        } else {
            totalVentas = (Integer.parseInt(cantCod) * 34500) + (Integer.parseInt(cantMin) * 8800) + (Integer.parseInt(cantFor) * 58200);

            // calculamos las comisiones de cada producto
            comisionCod = (int) ((Integer.parseInt(cantCod) * 34500) * 0.06);
            comisionMin = (int) ((Integer.parseInt(cantMin) * 8800) * 0.04);
            comisionFor = (int) ((Integer.parseInt(cantFor) * 58200) * 0.09);

            totalComision = comisionCod + comisionMin + comisionFor;

            try {
                // Primera conexión a la base de datos
                Connection cn = DriverManager.getConnection(url, user, password);
                // hacemos la consulta para ver si el codigoVendedor ya existe
                PreparedStatement pst = cn.prepareStatement("select * from vendedor where Codigo_vendedor = '" + codigoVendedor + "'");
                ResultSet rs = pst.executeQuery();
                // Si encuentra un codigoVendedor igual al registro hace lo siguiente
                if (rs.next()) {
                    // El codigoVendedor registrado fue encontrado, entonces actualiza los nuesvos registros
                    try {
                        // segunda conexión a la base de datos
                        Connection cn2 = DriverManager.getConnection(url, user, password);
                        // hacemos la consulta SQL par que actualice los datos
                        PreparedStatement pst2 = cn2.prepareStatement("update vendedor set Cant_venta_cod=?, Cant_venta_min=?, Cant_venta_for=?, TotalVentas=?, Comision_cod=?, Comision_min=?, Comision_for=?, TotalComision=? where Codigo_vendedor = '" + codigoVendedor + "'");
                        pst2.setString(1, cantCod);
                        pst2.setString(2, cantMin);
                        pst2.setString(3, cantFor);
                        pst2.setInt(4, totalVentas);
                        pst2.setInt(5, comisionCod);
                        pst2.setInt(6, comisionMin);
                        pst2.setInt(7, comisionFor);
                        pst2.setInt(8, totalComision);
                        pst2.executeUpdate();

                        inputNombre.setText("");
                        inputCodigoVendedor.setText("");
                        cantVentaCod.setText("");
                        cantVentaMin.setText("");
                        cantVentaFor.setText("");
                        precioTotalCod.setText("");
                        precioTotalFor.setText("");
                        precioTotalMin.setText("");
                        comisionGanadaCod.setText("");
                        comisionGanadaMin.setText("");
                        comisionGanadaFor.setText("");

                        JOptionPane.showMessageDialog(null, "Los datos ingresados ya pertenecen a un vendedor registrado, por lo tanto se actualizo los datos");
                        cn2.close();
                    } catch (SQLException e) {
                        System.err.println("ERROR AL ACTUALIZAR LOS NUEVOS REGISTROS");
                    }

                    // Si el codigoVendedor registrado no esxiste en la base de datos entonces agrega el registro
                } else {
                    try {
                        // Tercera conexión a la base de datos
                        Connection cn3 = DriverManager.getConnection(url, user, password);
                        // hacemos la consulta para que ingrese los datos
                        PreparedStatement pst3 = cn3.prepareStatement("insert into vendedor values(?,?,?,?,?,?,?,?,?,?)");

                        pst3.setString(1, codigoVendedor);
                        pst3.setString(2, nombre);
                        pst3.setString(3, cantCod);
                        pst3.setString(4, cantMin);
                        pst3.setString(5, cantFor);
                        pst3.setInt(6, totalVentas);
                        pst3.setInt(7, comisionCod);
                        pst3.setInt(8, comisionMin);
                        pst3.setInt(9, comisionFor);
                        pst3.setInt(10, totalComision);
                        pst3.executeUpdate();

                        inputNombre.setText("");
                        inputCodigoVendedor.setText("");
                        cantVentaCod.setText("");
                        cantVentaMin.setText("");
                        cantVentaFor.setText("");
                        precioTotalCod.setText("");
                        precioTotalFor.setText("");
                        precioTotalMin.setText("");
                        comisionGanadaCod.setText("");
                        comisionGanadaMin.setText("");
                        comisionGanadaFor.setText("");
                        
                        JOptionPane.showMessageDialog(null, "Registro exitoso");
                        cn.close();
                    } catch (SQLException e) {
                        System.out.println(e);
                    }
                }
            } catch (SQLException e) {
            }
        }
    }//GEN-LAST:event_btn_registrarActionPerformed

    // vendedor que genero mayor ventas y comison
    private void btn_finalizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_finalizarActionPerformed
        // TODO add your handling code here:
        int contadorVendedores = 0;
        String texto = "";
        try {
            // nos conectamos a la base de 
            Connection cn = DriverManager.getConnection(url, user, password);
            PreparedStatement pst = cn.prepareStatement("select Nombre, TotalVentas, TotalComision from vendedor where TotalVentas = (select max(totalVentas) from vendedor)");
            ResultSet rs = pst.executeQuery();

            while (rs.next()) {
                contadorVendedores++;
                texto = texto + "     -  " + rs.getString("Nombre") + " con " + rs.getInt("TotalVentas") + " y " + "con una comision de $ " + rs.getInt("TotalComision") + "\n";
                if (contadorVendedores == 1) {
                    rs.getInt("TotalVentas");
                }
            }
            if (contadorVendedores > 0) {
                if (contadorVendedores == 1) {
                    texto = "El vendedor que genero mas ventas ventas es:\n" + texto;
                } else {
                    texto = "Los vendedores que generaron mas ventas son:\n" + texto;
                }
                mayorVendedor.setText(texto);
            } else {
                mayorVendedor.setText("La base de datos no tiene registros.");
            }
        } catch (SQLException e) {
            System.err.println(e);
        }
    }//GEN-LAST:event_btn_finalizarActionPerformed

    // Esto nos permitira ajustar las imagenes en nuestro Jlabel
    private void SetImageLabel(JLabel labelName, String root) {
        ImageIcon image = new ImageIcon(root);
        Icon icon = new ImageIcon(image.getImage().getScaledInstance(labelName.getWidth(), labelName.getHeight(), Image.SCALE_DEFAULT));
        labelName.setIcon(icon);
        this.repaint();
    }
    /**
     * @param args the command line arguments
     */

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_finalizar;
    private javax.swing.JButton btn_registrar;
    private javax.swing.JButton btn_vendedores;
    private javax.swing.JTextField cantVentaCod;
    private javax.swing.JTextField cantVentaFor;
    private javax.swing.JTextField cantVentaMin;
    private javax.swing.JLabel comisionGanadaCod;
    private javax.swing.JLabel comisionGanadaFor;
    private javax.swing.JLabel comisionGanadaMin;
    private javax.swing.JLabel imgCod;
    private javax.swing.JLabel imgFor;
    private javax.swing.JLabel imgMin;
    private javax.swing.JTextField inputCodigoVendedor;
    private javax.swing.JTextField inputNombre;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabelCantVentaFor;
    private javax.swing.JLabel jLabelCantVentaMin;
    private javax.swing.JLabel jLabelCantaVentaCod;
    private javax.swing.JLabel jLabelCodigoVendedor;
    private javax.swing.JLabel jLabelFondo;
    private javax.swing.JLabel jLabelNombre;
    private javax.swing.JLabel jLabelPrecioCod;
    private javax.swing.JLabel jLabelPrecioFor;
    private javax.swing.JLabel jLabelPrecioMin;
    private javax.swing.JLabel jLabelTitulo;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextArea mayorVendedor;
    private javax.swing.JLabel precioTotalCod;
    private javax.swing.JLabel precioTotalFor;
    private javax.swing.JLabel precioTotalMin;
    // End of variables declaration//GEN-END:variables
}
